{"version":3,"sources":["store/constants.js","store/data/weather/action-types.js","store/data/weather/reducers.js","store/root.reducers.js","store/index.js","store/data/data.selectors.js","store/data/weather/selectors.js","store/data/weather/actions.js","components/NotFound/NotFound.jsx","components/Weather/Weather.jsx","components/Home/Home.jsx","services/dateBuilder.js","components/App/App.cmp.jsx","components/App/App.cnt.js","index.js"],"names":["FEATURE_DATA_NAME","SET_WEATHER","CLEAR_WEATHER","SET_WEATHER_ERROR","initialState","weather","error","combineReducers","state","action","type","weatherAT","payload","enhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","rootReducer","selectDataState","selectWeather","selectWeatherError","api","process","fetchWeather","query","dispatch","getState","fetch","then","res","json","apiData","cod","value","setWeather","NotFound","history","useHistory","className","onClick","push","Weather","props","dateBuilder","setQuery","cityId","useParams","fetchApi","useEffect","id","placeholder","onChange","e","target","onKeyPress","evt","key","name","sys","country","Date","Math","round","main","temp","Home","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","App","useState","exact","path","to","connect","ownProps","city","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4b9f90b5.chunk.js","sourcesContent":["export const FEATURE_DATA_NAME = 'data';\r\nexport const FEATURE_WEATHER_NAME = 'weather';\r\nexport const FEATURE_WEATHER_ERROR_NAME = 'error';\r\n","export const SET_WEATHER = 'set weather';\r\nexport const CLEAR_WEATHER = 'clear weather';\r\nexport const SET_WEATHER_ERROR = 'set weather error';\r\n","import * as weatherAT from './action-types';\r\n\r\nconst initialState = {\r\n  weather: {},\r\n  error: null,\r\n};\r\n\r\nexport default function weatherReducers(state = initialState, action) {\r\n  switch (action.type) {\r\n    case weatherAT.SET_WEATHER: {\r\n      return {\r\n        ...state,\r\n        weather: action.payload,\r\n      };\r\n    }\r\n    case weatherAT.SET_WEATHER_ERROR: {\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    }\r\n    case weatherAT.CLEAR_WEATHER: {\r\n      return initialState;\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\n\r\nimport { FEATURE_DATA_NAME, FEATURE_WEATHER_NAME } from './constants';\r\nimport weatherReducers from './data/weather/reducers';\r\n\r\nexport default combineReducers({\r\n  [FEATURE_DATA_NAME]: weatherReducers,\r\n});\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './root.reducers';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst enhancers = composeEnhancers(applyMiddleware(...[thunk]));\r\n\r\nconst defaultState = {};\r\n\r\nexport const store = createStore(rootReducer, defaultState, enhancers);\r\n","import { FEATURE_DATA_NAME } from '../constants';\r\n\r\nexport const selectDataState = (state) => state[FEATURE_DATA_NAME];\r\n","import {\r\n  FEATURE_WEATHER_NAME,\r\n  FEATURE_WEATHER_ERROR_NAME,\r\n} from '../../constants';\r\nimport { selectDataState } from '../data.selectors';\r\n\r\nexport const selectWeather = (state) =>\r\n  selectDataState(state)[FEATURE_WEATHER_NAME];\r\n\r\nexport const selectWeatherError = (state) =>\r\n  selectDataState(state)[FEATURE_WEATHER_ERROR_NAME];\r\n","import * as weatherAT from './action-types';\r\n\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\n\r\nconst api = {\r\n  key: API_KEY,\r\n  base: 'https://api.openweathermap.org/data/2.5/',\r\n};\r\n\r\nexport const setWeather = (value) => ({\r\n  type: weatherAT.SET_WEATHER,\r\n  payload: value,\r\n});\r\n\r\nexport const setWeatherError = (value) => ({\r\n  type: weatherAT.SET_WEATHER_ERROR,\r\n  payload: value,\r\n});\r\n\r\nconst clearWeather = () => ({\r\n  type: weatherAT.CLEAR_WEATHER,\r\n});\r\n\r\nexport const fetchWeather = (query) => {\r\n  return (dispatch, getState) => {\r\n    dispatch(clearWeather());\r\n    const state = getState();\r\n    fetch(`${api.base}weather?q=${query}&units=metric&appid=${api.key}`)\r\n      .then((res) => res.json())\r\n      .then((apiData) => {\r\n        if (apiData.cod === '404') {\r\n          dispatch(setWeatherError(404));\r\n        } else {\r\n          dispatch(setWeather(apiData));\r\n        }\r\n      });\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport function NotFound() {\r\n  const history = useHistory();\r\n  const handleClick = () => {\r\n    history.push(`/`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"not-found\">\r\n      <div className=\"not-found__container\">\r\n        <h1 className=\"not-found__heading\">404 Not Found</h1>\r\n        <h1\r\n          className=\"not-found__heading not-found__heading--link\"\r\n          onClick={handleClick}\r\n        >\r\n          Go to menu\r\n        </h1>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { NotFound } from '../NotFound';\r\n\r\nexport function Weather({ props, dateBuilder, query, setQuery }) {\r\n  let { cityId } = useParams();\r\n  const { fetchApi } = props;\r\n  const history = useHistory();\r\n\r\n  const handleKeyPress = (evt) => {\r\n    if (evt.key === 'Enter') {\r\n      history.push(`/${query}`);\r\n      setQuery('');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchApi(cityId);\r\n  }, [fetchApi, cityId]);\r\n\r\n  return (\r\n    <>\r\n      {props.error ? (\r\n        <NotFound />\r\n      ) : (\r\n        props.weather?.id && (\r\n          <div className=\"weather\">\r\n            <div className=\"weather__search-box\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"search-box__input\"\r\n                placeholder=\"Search...\"\r\n                onChange={(e) => setQuery(e.target.value)}\r\n                value={query}\r\n                onKeyPress={handleKeyPress}\r\n              ></input>\r\n            </div>\r\n\r\n            <div className=\"weather__general-info\">\r\n              <div className=\"general-info__location\">\r\n                {props.weather.name}, {props.weather.sys.country}\r\n              </div>\r\n              <div className=\"general-info__date\">\r\n                {dateBuilder(new Date())}\r\n              </div>\r\n            </div>\r\n            <div className=\"weather__info\">\r\n              <div className=\"info__temperature\">\r\n                {Math.round(props.weather.main.temp)}°C\r\n              </div>\r\n              <div className=\"info__weather\">\r\n                {props.weather.weather[0].main}\r\n              </div>\r\n              {/* <div className=\"icon\">\r\n                <img\r\n                  src={`http://openweathermap.org/img/wn/${props.weather.weather[0].icon}@2x.png`}\r\n                ></img>\r\n              </div> */}\r\n            </div>\r\n          </div>\r\n        )\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport function Home({ query, setQuery }) {\r\n  const history = useHistory();\r\n\r\n  const handleKeyPress = (evt) => {\r\n    if (evt.key === 'Enter') {\r\n      history.push(`/${query}`);\r\n      setQuery('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <div className=\"home__heading\">\r\n        <h1 className=\"home__heading--one\">Weather App</h1>\r\n        <h3 className=\"home__heading--two\">\r\n          Check current weather in any place in the world!\r\n        </h3>\r\n      </div>\r\n      <div className=\"home__search-box\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"search-box__input\"\r\n          placeholder=\"Search...\"\r\n          onChange={(e) => setQuery(e.target.value)}\r\n          value={query}\r\n          onKeyPress={handleKeyPress}\r\n        ></input>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export const dateBuilder = (d) => {\r\n  let months = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n  ];\r\n  let days = [\r\n    'Sunday',\r\n    'Monday',\r\n    'Tuesday',\r\n    'Wednesday',\r\n    'Thursday',\r\n    'Friday',\r\n    'Saturday',\r\n  ];\r\n\r\n  let day = days[d.getDay()];\r\n  let date = d.getDate();\r\n  let month = months[d.getMonth()];\r\n  let year = d.getFullYear();\r\n\r\n  return `${day} ${date} ${month} ${year}`;\r\n};\r\n","import React, { useState } from 'react';\r\nimport { HashRouter, Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nimport { Weather } from '../Weather';\r\nimport { Home } from '../Home';\r\nimport { NotFound } from '../NotFound';\r\nimport { dateBuilder } from '../../services/dateBuilder';\r\n\r\nexport function App(props) {\r\n  const [query, setQuery] = useState('');\r\n\r\n  return (\r\n    <HashRouter>\r\n      <div className={10 > new Date().getMonth() > 4 ? 'app' : 'app app--cold'}>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home query={query} setQuery={setQuery} />\r\n          </Route>\r\n          <Route path=\"/:cityId\">\r\n            <Weather\r\n              dateBuilder={dateBuilder}\r\n              props={props}\r\n              query={query}\r\n              setQuery={setQuery}\r\n            />\r\n          </Route>\r\n          <Route path=\"/place-not-found\">\r\n            <NotFound />\r\n          </Route>\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n      </div>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport {\r\n  selectWeather,\r\n  selectWeatherError,\r\n} from '../../store/data/weather/selectors';\r\nimport { fetchWeather } from '../../store/data/weather/actions';\r\n\r\nimport App from './App.cmp';\r\n\r\nconst mapState = (state, ownProps) => ({\r\n  weather: selectWeather(state),\r\n  error: selectWeatherError(state),\r\n});\r\n\r\nconst mapDispatch = (dispatch, ownProps) => ({\r\n  fetchApi: (city) => dispatch(fetchWeather(city)),\r\n});\r\n\r\nexport default compose(connect(mapState, mapDispatch))(App);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\nimport './index.css';\nimport { App } from './components/App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}