{"version":3,"sources":["store/constants.js","store/data/weather/action-types.js","store/data/weather/reducers.js","store/root.reducers.js","store/index.js","store/data/weather/selectors.js","store/data/data.selectors.js","store/data/weather/actions.js","components/Weather/Weather.jsx","components/Home/Home.jsx","components/NotFound/NotFound.jsx","services/dateBuilder.js","services/ErrorHandler.jsx","components/App/App.cmp.jsx","components/App/App.cnt.js","index.js"],"names":["FEATURE_DATA_NAME","SET_WEATHER","initialState","weather","weatherReducers","state","action","type","weatherAT","payload","rootReducer","history","combineReducers","router","connectRouter","createBrowserHistory","enhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","routerMiddleware","store","createStore","selectWeather","selectDataState","api","process","changePath","path","dispatch","push","fetchWeather","query","getState","fetch","then","res","json","apiData","cod","replace","location","errorStatusCode","Weather","props","dateBuilder","setQuery","cityId","useParams","useHistory","fetchApi","useEffect","id","className","placeholder","onChange","e","target","value","onKeyPress","evt","key","name","sys","country","Date","Math","round","main","temp","Home","NotFound","to","onClick","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","ErrorHandler","children","get","App","useState","exact","connect","ownProps","city","ReactDOM","render","context","ReactReduxContext","document","getElementById"],"mappings":"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","file":"static/js/main.b50ba7e1.chunk.js","sourcesContent":["export const FEATURE_DATA_NAME = 'data';\r\nexport const FEATURE_WEATHER_NAME = 'weather';\r\n","export const SET_WEATHER = 'set weather';\r\n","import * as weatherAT from './action-types';\r\n\r\nconst initialState = {\r\n  weather: {},\r\n};\r\n\r\nexport default function weatherReducers(state = initialState, action) {\r\n  switch (action.type) {\r\n    case weatherAT.SET_WEATHER: {\r\n      return {\r\n        ...state,\r\n        weather: action.payload,\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { connectRouter } from 'connected-react-router';\r\n\r\nimport { FEATURE_DATA_NAME } from './constants';\r\nimport weatherReducers from './data/weather/reducers';\r\n\r\nconst rootReducer = (history) =>\r\n  combineReducers({\r\n    router: connectRouter(history),\r\n    [FEATURE_DATA_NAME]: weatherReducers,\r\n  });\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport { routerMiddleware } from 'connected-react-router';\r\nimport { createBrowserHistory } from 'history';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './root.reducers';\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst enhancers = composeEnhancers(\r\n  applyMiddleware(...[thunk, routerMiddleware(history)])\r\n);\r\n\r\nconst defaultState = {};\r\n\r\nexport const store = createStore(rootReducer(history), defaultState, enhancers);\r\n","import { FEATURE_WEATHER_NAME } from '../../constants';\r\nimport { selectDataState } from '../data.selectors';\r\n\r\nexport const selectWeather = (state) =>\r\n  selectDataState(state)[FEATURE_WEATHER_NAME];\r\n","import { FEATURE_DATA_NAME } from '../constants';\r\n\r\nexport const selectDataState = (state) => state[FEATURE_DATA_NAME];\r\n","import * as weatherAT from './action-types';\r\nimport { replace, push } from 'connected-react-router';\r\n\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\n\r\nconst api = {\r\n  key: API_KEY,\r\n  base: 'https://api.openweathermap.org/data/2.5/',\r\n};\r\n\r\nexport const setWeather = (value) => ({\r\n  type: weatherAT.SET_WEATHER,\r\n  payload: value,\r\n});\r\n\r\nconst clearState = () => {\r\n  return (dispatch, getState) => {\r\n    const state = getState();\r\n    dispatch(\r\n      replace(state.router.location.state, {\r\n        errorStatusCode: null,\r\n      })\r\n    );\r\n  };\r\n};\r\n\r\nexport const changePath = (path) => {\r\n  return (dispatch) => {\r\n    clearState();\r\n    dispatch(push(path));\r\n  };\r\n};\r\n\r\nexport const fetchWeather = (query) => {\r\n  return (dispatch, getState) => {\r\n    const state = getState();\r\n    fetch(`${api.base}weather?q=${query}&units=metric&appid=${api.key}`)\r\n      .then((res) => res.json())\r\n      .then((apiData) => {\r\n        if (apiData.cod === '404') {\r\n          dispatch(\r\n            replace(state.router.location.state, {\r\n              errorStatusCode: apiData.cod,\r\n            })\r\n          );\r\n        } else {\r\n          dispatch(setWeather(apiData));\r\n        }\r\n      });\r\n  };\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\n\r\nexport function Weather({ props, dateBuilder, query, setQuery }) {\r\n  let { cityId } = useParams();\r\n  const history = useHistory();\r\n  const { fetchApi } = props;\r\n\r\n  const handleKeyPress = (evt) => {\r\n    if (evt.key === 'Enter') {\r\n      props.changePath(`/current-weather/${query}`);\r\n      history.push(`/current-weather/${query}`);\r\n      setQuery('');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchApi(cityId);\r\n  }, [fetchApi, cityId]);\r\n\r\n  return (\r\n    <>\r\n      {props.weather?.id && (\r\n        <div className=\"weather\">\r\n          <div className=\"weather__search-box\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"search-box__input\"\r\n              placeholder=\"Search...\"\r\n              onChange={(e) => setQuery(e.target.value)}\r\n              value={query}\r\n              onKeyPress={handleKeyPress}\r\n            ></input>\r\n          </div>\r\n\r\n          <div className=\"weather__general-info\">\r\n            <div className=\"general-info__location\">\r\n              {props.weather.name}, {props.weather.sys.country}\r\n            </div>\r\n            <div className=\"general-info__date\">{dateBuilder(new Date())}</div>\r\n          </div>\r\n          <div className=\"weather__info\">\r\n            <div className=\"info__temperature\">\r\n              {Math.round(props.weather.main.temp)}Â°C\r\n            </div>\r\n            <div className=\"info__weather\">{props.weather.weather[0].main}</div>\r\n            {/* <div className=\"icon\">\r\n                <img\r\n                  src={`http://openweathermap.org/img/wn/${props.weather.weather[0].icon}@2x.png`}\r\n                ></img>\r\n              </div> */}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport function Home({ props, query, setQuery }) {\r\n  const history = useHistory();\r\n  const handleKeyPress = (evt) => {\r\n    if (evt.key === 'Enter') {\r\n      props.changePath(`/current-weather/${query}`);\r\n      history.push(`/current-weather/${query}`);\r\n      setQuery('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <div className=\"home__heading\">\r\n        <h1 className=\"home__heading--one\">Weather App</h1>\r\n        <h3 className=\"home__heading--two\">\r\n          Check current weather in any place in the world!\r\n        </h3>\r\n      </div>\r\n      <div className=\"home__search-box\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"search-box__input\"\r\n          placeholder=\"Search...\"\r\n          onChange={(e) => setQuery(e.target.value)}\r\n          value={query}\r\n          onKeyPress={handleKeyPress}\r\n        ></input>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport function NotFound({ props }) {\r\n  const handleClick = () => {\r\n    props.changePath('/');\r\n  };\r\n\r\n  return (\r\n    <div className=\"not-found\">\r\n      <div className=\"not-found__container\">\r\n        <h1 className=\"not-found__heading\">404 Not Found</h1>\r\n        <Link className=\"not-found__heading\" to=\"/\" onClick={handleClick}>\r\n          Go to menu\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export const dateBuilder = (d) => {\r\n  let months = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n  ];\r\n  let days = [\r\n    'Sunday',\r\n    'Monday',\r\n    'Tuesday',\r\n    'Wednesday',\r\n    'Thursday',\r\n    'Friday',\r\n    'Saturday',\r\n  ];\r\n\r\n  let day = days[d.getDay()];\r\n  let date = d.getDate();\r\n  let month = months[d.getMonth()];\r\n  let year = d.getFullYear();\r\n\r\n  return `${day} ${date} ${month} ${year}`;\r\n};\r\n","import React from 'react';\r\nimport { get } from 'lodash';\r\nimport { NotFound } from '../components/NotFound';\r\n\r\nconst ErrorHandler = ({ children, props }) => {\r\n  switch (get(props.location.state, 'errorStatusCode')) {\r\n    case '404':\r\n      return <NotFound props={props} />;\r\n    default:\r\n      return children;\r\n  }\r\n};\r\n\r\nexport default ErrorHandler;\r\n","import React, { useState } from 'react';\r\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nimport { Weather } from '../Weather';\r\nimport { Home } from '../Home';\r\nimport { NotFound } from '../NotFound';\r\nimport { dateBuilder } from '../../services/dateBuilder';\r\nimport ErrorHandler from '../../services/ErrorHandler';\r\n\r\nexport function App(props) {\r\n  const [query, setQuery] = useState('');\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <ErrorHandler props={props}>\r\n        <div\r\n          className={\r\n            10 > new Date().getMonth() > 4 || props.weather.main?.temp > 16\r\n              ? 'app'\r\n              : 'app app--cold'\r\n          }\r\n        >\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Home props={props} query={query} setQuery={setQuery} />\r\n            </Route>\r\n            <Route path=\"/current-weather/:cityId\">\r\n              <Weather\r\n                dateBuilder={dateBuilder}\r\n                props={props}\r\n                query={query}\r\n                setQuery={setQuery}\r\n              />\r\n            </Route>\r\n            <Route path=\"/place-not-found\">\r\n              <NotFound props={props} />\r\n            </Route>\r\n            <Redirect to=\"/\" />\r\n          </Switch>\r\n        </div>\r\n      </ErrorHandler>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { selectWeather } from '../../store/data/weather/selectors';\r\nimport { changePath, fetchWeather } from '../../store/data/weather/actions';\r\n\r\nimport App from './App.cmp';\r\n\r\nconst mapState = (state, ownProps) => ({\r\n  weather: selectWeather(state),\r\n  location: state.router.location,\r\n});\r\n\r\nconst mapDispatch = (dispatch, ownProps) => ({\r\n  fetchApi: (city) => dispatch(fetchWeather(city)),\r\n  changePath: (path) => dispatch(changePath(path)),\r\n});\r\n\r\nexport default compose(connect(mapState, mapDispatch))(App);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider, ReactReduxContext } from 'react-redux';\nimport { store, history } from './store';\nimport './index.css';\nimport { App } from './components/App';\nimport { ConnectedRouter } from 'connected-react-router';\n\nReactDOM.render(\n  <Provider store={store} context={ReactReduxContext}>\n    <ConnectedRouter history={history} context={ReactReduxContext}>\n      <App />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}